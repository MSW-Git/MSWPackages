@Component
script UIGMGameEventToolUser extends Component

	property UIGMGameEventTool Parent = nil

	property TextComponent Text_Name = nil

	property GridViewComponent GridViewComp = nil

	property Entity Item = nil

	property table GridViewDataTable = {}

	property TextComponent Text_ProfileCode = nil

	@ExecSpace("ClientOnly")
	method void OnBeginPlay()
		local entity = self.Entity
		
		self.Text_Name = entity:GetChildByName("Text_Name").TextComponent
		
		local item = entity:GetChildByName("Item")
		item.Enable = false
		self.Item = item
		
		local gridViewComp = entity:GetChildByName("GridView").GridViewComponent
		gridViewComp.ItemEntity = item
		gridViewComp.OnRefresh = self.OnRefresh
		gridViewComp.OnClear = self.OnClear
		gridViewComp.Entity:ConnectEvent(ButtonClickEvent, self.OnClickBtn_Detail)
		self.GridViewComp = gridViewComp
		
		local scroll_bottom = entity:GetChildByName("Scroll_Bottom")
		self.Text_ProfileCode = scroll_bottom:GetChildByName("Text_ProfileCode").TextComponent
		
		local btn_query = scroll_bottom:GetChildByName("Btn_Query")
		btn_query:ConnectEvent(ButtonClickEvent, self.OnClickBtn_Query)
	end

	@ExecSpace("ClientOnly")
	method void Apply(string profileCode, table dataTable)
		self.Text_Name.Text = "ProfileCode : " .. profileCode
		table.initialize(self.GridViewDataTable, dataTable)
		
		local count = #self.GridViewDataTable
		self.GridViewComp.TotalCount = count
		self.GridViewComp:Refresh(true, true)
	end

	@ExecSpace("ClientOnly")
	method void OnRefresh(integer index, Entity entity)
		index += 1
		local s = self.GridViewDataTable[index]
		entity.UIGMGameEventToolUserItem:Set(s, self.Parent.TimeOffset)
	end

	@ExecSpace("ClientOnly")
	method void OnClear(integer index, Entity entity)
		entity.UIGMGameEventToolUserItem:Clear()
	end

	@ExecSpace("ClientOnly")
	method void OnClickBtn_Query()
		local profileCode = self.Text_ProfileCode.Text
		if _Util:IsNilorEmptyString(profileCode) then
			return
		end
		
		_GMGameEventToolLogic:RequestUserDataList(profileCode, false)
	end

	@ExecSpace("ClientOnly")
	method void Invalidate(boolean resetPos)
		self.GridViewComp.TotalCount = #self.GridViewDataTable
		self.GridViewComp:Refresh(resetPos, true)
	end

	@ExecSpace("ClientOnly")
	method void OnClickBtn_Detail(ButtonClickEvent evt)
		---@type UserGameEventData
		local data = evt.Entity.UIGMGameEventToolUserItem.UserData
		if data == nil then
			return
		end
		
		self.Parent:OpenPopup_UserDetail(data)
	end

end