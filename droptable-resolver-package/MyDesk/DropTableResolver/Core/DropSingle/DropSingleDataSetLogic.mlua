@Logic
script DropSingleDataSetLogic extends Logic

	property table DataTable = {}

	method boolean Load()
		---@type table<integer, table<DropSingleData>>
		local dataTable = self.DataTable
		local rows = _DataService:GetTable("DropSingleDataSet"):GetAllRow()
		for i = 1, #rows do
			local row = rows[i]
			local data = DropSingleData()
			if not data:Load(row) then
				return false
			end
		
			local id = data.Id
			local dataList = dataTable[id]
			if dataList == nil then
				dataList = {}
				dataTable[id] = dataList
			end
		
			dataList[#dataList + 1] = data
		end
		
		if not self:IsValid() then
			return false
		end
		
		return true
	end

	method boolean IsValid()
		-- Verifies that the data corresponding to the ID used in the DataSet exists.
		---@type table<integer, table<DropSingleData>>
		local dataTable = self.DataTable
		for id, dataList in pairs(dataTable) do
			for i = 1, #dataList do
				local data = dataList[i]
				
				---@type table<DropSingleGroupData>
				local groupDataList = _DropSingleGroupDataSetLogic:GetDataList(data.GroupId)
				if groupDataList == nil then
					log_error(string.format("Invalid groupId. Id : %d, GroupId : %d", id, data.GroupId))
					return false
				end
			end
		end
		
		return true
	end

	method table GetDataList(integer dropId)
		return self.DataTable[dropId]
	end

end