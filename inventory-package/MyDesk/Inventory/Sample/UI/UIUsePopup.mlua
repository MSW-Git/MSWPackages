@Component
script UIUsePopup extends Component

	property TextComponent TextMessage = nil

	property TextComponent TextExpireDate = nil

	property TextComponent TextConfirm = nil

	property TextComponent TextCancel = nil

	property UIInventory Inventory = nil

	property UIItemSlot ItemSlot = nil

	@ExecSpace("ClientOnly")
	method void OnBeginPlay()
		local panel = self.Entity:GetChildByName("Panel")
		local textTitle = panel:GetChildByName("Title").TextComponent
		textTitle.Text = "아이템 사용"
		
		local itemDecoration = panel:GetChildByName("ItemDecoration")
		local itemSlotEntity = _SpawnService:SpawnByModelId(_EntryService:GetModelIdByName("UIItemSlot"), "ItemSlot", Vector3.zero, self.Entity)
		self.ItemSlot = itemSlotEntity.UIItemSlot
		
		local expireDateEntity = panel:GetChildByName("ExpireDate")
		self.TextExpireDate = expireDateEntity.TextComponent
		
		local messageEntity = panel:GetChildByName("Message")
		self.TextMessage = messageEntity.TextComponent
		self.TextMessage.Text = "사용하시겠습니까?"
		
		local buttonConfirmEntity = panel:GetChildByName("ButtonConfirm")
		buttonConfirmEntity:ConnectEvent(ButtonClickEvent, function() self:OnConfirmButtonClicked() end)
		self.TextConfirm = buttonConfirmEntity.TextComponent
		self.TextConfirm.Text = "사용"
		
		local buttonCancelEntity = panel:GetChildByName("ButtonCancel")
		buttonCancelEntity:ConnectEvent(ButtonClickEvent, function() self:OnCancelButtonClicked() end)
		self.TextCancel = buttonCancelEntity.TextComponent
		self.TextCancel.Text = "취소"
		
		local buttonDeleteEntity = panel:GetChildByName("ButtonDelete")
		buttonDeleteEntity:ConnectEvent(ButtonClickEvent, function() self:OnDeleteButtonClicked() end)
	end

	@ExecSpace("ClientOnly")
	method void Open(ItemStruct itemStruct)
		self.ItemSlot:Set(itemStruct)
		
		if itemStruct.EndDateSeconds == 0 then
			self.TextExpireDate.Enable = false
		else
		    self.TextExpireDate.Text = "~ ".. DateTime(itemStruct.EndDateSeconds * 1000):ToFormattedString("G")
		    self.TextExpireDate.Enable = true
		end
		
		self.Entity.Enable = true
	end

	@ExecSpace("ClientOnly")
	method void OnConfirmButtonClicked()
		if self.Entity.Enable == false or self.ItemSlot.ItemStruct == nil then
			return
		end
		
		---@type ItemStruct
		local itemStruct = self.ItemSlot.ItemStruct
		local itemData = itemStruct:GetItemData()
		
		_UserService.LocalPlayer.PlayerInventory:RequestUseItem(itemStruct.GUID, 1)
		
		self:Close()
	end

	@ExecSpace("ClientOnly")
	method void OnCancelButtonClicked()
		self:Close()
	end

	@ExecSpace("ClientOnly")
	method void OnDeleteButtonClicked()
		if self.Entity.Enable == false or self.ItemSlot.ItemStruct == nil then
			return
		end
		
		---@type ItemStruct
		local itemStruct = self.ItemSlot.ItemStruct
		_UserService.LocalPlayer.PlayerInventory:RequestDiscardItem(itemStruct.GUID, 1)
		
		self:Close()
	end

	@ExecSpace("ClientOnly")
	method void Close()
		self.Entity.Enable = false
	end

end